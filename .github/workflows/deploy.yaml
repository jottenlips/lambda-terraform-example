name: Terraform Deployment

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-20.04
    timeout-minutes: 30
    steps:
      - name: checkout
        uses: actions/checkout@v1
      - name: Set up Python 3.9.10
        uses: actions/setup-python@v1
        with:
          python-version: 3.9.13
      - name: setup-terraform
        uses: hashicorp/setup-terraform@v2

      - name: AWS Credentials
        run: |
          aws configure --profile default set aws_access_key_id $AWS_ACCESS_KEY_ID
          aws configure --profile default set aws_secret_access_key $AWS_SECRET_ACCESS_KEY
          aws configure --profile default set region us-east-1
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Terraform Deploy
        run: |
          # create the bucket and dynamodb table for terraform state on first deploy or locally
          # aws s3api create-bucket --bucket terraform-state-s3backend --region us-east-1
          # aws s3api put-bucket-encryption --bucket terraform-state-s3backend --server-side-encryption-configuration "{\"Rules\": [{\"ApplyServerSideEncryptionByDefault\":{\"SSEAlgorithm\": \"AES256\"}}]}"
          # aws dynamodb create-table --table-name terraform-lock-table --attribute-definitions AttributeName=LockID,AttributeType=S --key-schema AttributeName=LockID,KeyType=HASH --provisioned-throughput ReadCapacityUnits=5,WriteCapacityUnits=5
          terraform init
          # terraform force-unlock -force 61068a56-a8ea-62c3-02ca-f2e0404dbc7c
          terraform plan -no-color -lock=false
          terraform apply -auto-approve
          echo ${{ steps.plan.outputs.stdout }}
          echo ${{ steps.plan.outputs.stderr }}
          echo ${{ steps.plan.outputs.exitcode }}
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
